package com.handpay.coupon.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.handpay.coupon.entity.GetCardData;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "GET_CARD_DATA".
*/
public class GetCardDataDao extends AbstractDao<GetCardData, String> {

    public static final String TABLENAME = "GET_CARD_DATA";

    /**
     * Properties of entity GetCardData.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Card_id = new Property(0, String.class, "card_id", true, "CARD_ID");
        public final static Property Local_id = new Property(1, String.class, "local_id", false, "LOCAL_ID");
        public final static Property Card_type = new Property(2, String.class, "card_type", false, "CARD_TYPE");
        public final static Property Default_detail = new Property(3, String.class, "default_detail", false, "DEFAULT_DETAIL");
        public final static Property Deal_detail = new Property(4, String.class, "deal_detail", false, "DEAL_DETAIL");
        public final static Property Gift = new Property(5, String.class, "gift", false, "GIFT");
        public final static Property Least_cost = new Property(6, long.class, "least_cost", false, "LEAST_COST");
        public final static Property Reduce_cost = new Property(7, long.class, "reduce_cost", false, "REDUCE_COST");
        public final static Property Discount = new Property(8, int.class, "discount", false, "DISCOUNT");
        public final static Property Supply_bonus = new Property(9, String.class, "supply_bonus", false, "SUPPLY_BONUS");
        public final static Property Supply_balance = new Property(10, String.class, "supply_balance", false, "SUPPLY_BALANCE");
        public final static Property Bonus_cleared = new Property(11, String.class, "bonus_cleared", false, "BONUS_CLEARED");
        public final static Property Bonus_rules = new Property(12, String.class, "bonus_rules", false, "BONUS_RULES");
        public final static Property Balance_rules = new Property(13, String.class, "balance_rules", false, "BALANCE_RULES");
        public final static Property Prerogative = new Property(14, String.class, "prerogative", false, "PREROGATIVE");
        public final static Property Bind_old_card_url = new Property(15, String.class, "bind_old_card_url", false, "BIND_OLD_CARD_URL");
        public final static Property Activate_url = new Property(16, String.class, "activate_url", false, "ACTIVATE_URL");
        public final static Property Ticket_class = new Property(17, String.class, "ticket_class", false, "TICKET_CLASS");
        public final static Property Guide_url = new Property(18, String.class, "guide_url", false, "GUIDE_URL");
        public final static Property Detail = new Property(19, String.class, "detail", false, "DETAIL");
        public final static Property From = new Property(20, String.class, "from", false, "FROM");
        public final static Property To = new Property(21, String.class, "to", false, "TO");
        public final static Property Flight = new Property(22, String.class, "flight", false, "FLIGHT");
        public final static Property Departure_time = new Property(23, String.class, "departure_time", false, "DEPARTURE_TIME");
        public final static Property Landing_time = new Property(24, String.class, "landing_time", false, "LANDING_TIME");
        public final static Property Check_in_url = new Property(25, String.class, "check_in_url", false, "CHECK_IN_URL");
        public final static Property Air_model = new Property(26, String.class, "air_model", false, "AIR_MODEL");
        public final static Property Logo_url = new Property(27, String.class, "logo_url", false, "LOGO_URL");
        public final static Property Code_type = new Property(28, String.class, "code_type", false, "CODE_TYPE");
        public final static Property Branch_name = new Property(29, String.class, "branch_name", false, "BRANCH_NAME");
        public final static Property Title = new Property(30, String.class, "title", false, "TITLE");
        public final static Property Color = new Property(31, String.class, "color", false, "COLOR");
        public final static Property Notice = new Property(32, String.class, "notice", false, "NOTICE");
        public final static Property Service_phone = new Property(33, String.class, "service_phone", false, "SERVICE_PHONE");
        public final static Property Description = new Property(34, String.class, "description", false, "DESCRIPTION");
        public final static Property Use_limit = new Property(35, int.class, "use_limit", false, "USE_LIMIT");
        public final static Property Get_limit = new Property(36, int.class, "get_limit", false, "GET_LIMIT");
        public final static Property Use_custom_code = new Property(37, boolean.class, "use_custom_code", false, "USE_CUSTOM_CODE");
        public final static Property Bind_openid = new Property(38, boolean.class, "bind_openid", false, "BIND_OPENID");
        public final static Property Can_give_friend = new Property(39, boolean.class, "can_give_friend", false, "CAN_GIVE_FRIEND");
        public final static Property Can_share = new Property(40, boolean.class, "can_share", false, "CAN_SHARE");
        public final static Property Location_id_list = new Property(41, String.class, "location_id_list", false, "LOCATION_ID_LIST");
        public final static Property Date_info = new Property(42, String.class, "date_info", false, "DATE_INFO");
        public final static Property Type = new Property(43, int.class, "type", false, "TYPE");
        public final static Property Begin_timestamp = new Property(44, long.class, "begin_timestamp", false, "BEGIN_TIMESTAMP");
        public final static Property End_timestamp = new Property(45, long.class, "end_timestamp", false, "END_TIMESTAMP");
        public final static Property Fixed_term = new Property(46, String.class, "fixed_term", false, "FIXED_TERM");
        public final static Property Fixed_begin_term = new Property(47, String.class, "fixed_begin_term", false, "FIXED_BEGIN_TERM");
        public final static Property Sku = new Property(48, String.class, "sku", false, "SKU");
        public final static Property Quantity = new Property(49, int.class, "quantity", false, "QUANTITY");
        public final static Property Url_name_type = new Property(50, String.class, "url_name_type", false, "URL_NAME_TYPE");
        public final static Property Custom_url = new Property(51, String.class, "custom_url", false, "CUSTOM_URL");
        public final static Property Source = new Property(52, String.class, "source", false, "SOURCE");
        public final static Property Status = new Property(53, int.class, "status", false, "STATUS");
    }


    public GetCardDataDao(DaoConfig config) {
        super(config);
    }
    
    public GetCardDataDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"GET_CARD_DATA\" (" + //
                "\"CARD_ID\" TEXT PRIMARY KEY NOT NULL ," + // 0: card_id
                "\"LOCAL_ID\" TEXT," + // 1: local_id
                "\"CARD_TYPE\" TEXT," + // 2: card_type
                "\"DEFAULT_DETAIL\" TEXT," + // 3: default_detail
                "\"DEAL_DETAIL\" TEXT," + // 4: deal_detail
                "\"GIFT\" TEXT," + // 5: gift
                "\"LEAST_COST\" INTEGER NOT NULL ," + // 6: least_cost
                "\"REDUCE_COST\" INTEGER NOT NULL ," + // 7: reduce_cost
                "\"DISCOUNT\" INTEGER NOT NULL ," + // 8: discount
                "\"SUPPLY_BONUS\" TEXT," + // 9: supply_bonus
                "\"SUPPLY_BALANCE\" TEXT," + // 10: supply_balance
                "\"BONUS_CLEARED\" TEXT," + // 11: bonus_cleared
                "\"BONUS_RULES\" TEXT," + // 12: bonus_rules
                "\"BALANCE_RULES\" TEXT," + // 13: balance_rules
                "\"PREROGATIVE\" TEXT," + // 14: prerogative
                "\"BIND_OLD_CARD_URL\" TEXT," + // 15: bind_old_card_url
                "\"ACTIVATE_URL\" TEXT," + // 16: activate_url
                "\"TICKET_CLASS\" TEXT," + // 17: ticket_class
                "\"GUIDE_URL\" TEXT," + // 18: guide_url
                "\"DETAIL\" TEXT," + // 19: detail
                "\"FROM\" TEXT," + // 20: from
                "\"TO\" TEXT," + // 21: to
                "\"FLIGHT\" TEXT," + // 22: flight
                "\"DEPARTURE_TIME\" TEXT," + // 23: departure_time
                "\"LANDING_TIME\" TEXT," + // 24: landing_time
                "\"CHECK_IN_URL\" TEXT," + // 25: check_in_url
                "\"AIR_MODEL\" TEXT," + // 26: air_model
                "\"LOGO_URL\" TEXT," + // 27: logo_url
                "\"CODE_TYPE\" TEXT," + // 28: code_type
                "\"BRANCH_NAME\" TEXT," + // 29: branch_name
                "\"TITLE\" TEXT," + // 30: title
                "\"COLOR\" TEXT," + // 31: color
                "\"NOTICE\" TEXT," + // 32: notice
                "\"SERVICE_PHONE\" TEXT," + // 33: service_phone
                "\"DESCRIPTION\" TEXT," + // 34: description
                "\"USE_LIMIT\" INTEGER NOT NULL ," + // 35: use_limit
                "\"GET_LIMIT\" INTEGER NOT NULL ," + // 36: get_limit
                "\"USE_CUSTOM_CODE\" INTEGER NOT NULL ," + // 37: use_custom_code
                "\"BIND_OPENID\" INTEGER NOT NULL ," + // 38: bind_openid
                "\"CAN_GIVE_FRIEND\" INTEGER NOT NULL ," + // 39: can_give_friend
                "\"CAN_SHARE\" INTEGER NOT NULL ," + // 40: can_share
                "\"LOCATION_ID_LIST\" TEXT," + // 41: location_id_list
                "\"DATE_INFO\" TEXT," + // 42: date_info
                "\"TYPE\" INTEGER NOT NULL ," + // 43: type
                "\"BEGIN_TIMESTAMP\" INTEGER NOT NULL ," + // 44: begin_timestamp
                "\"END_TIMESTAMP\" INTEGER NOT NULL ," + // 45: end_timestamp
                "\"FIXED_TERM\" TEXT," + // 46: fixed_term
                "\"FIXED_BEGIN_TERM\" TEXT," + // 47: fixed_begin_term
                "\"SKU\" TEXT," + // 48: sku
                "\"QUANTITY\" INTEGER NOT NULL ," + // 49: quantity
                "\"URL_NAME_TYPE\" TEXT," + // 50: url_name_type
                "\"CUSTOM_URL\" TEXT," + // 51: custom_url
                "\"SOURCE\" TEXT," + // 52: source
                "\"STATUS\" INTEGER NOT NULL );"); // 53: status
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"GET_CARD_DATA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, GetCardData entity) {
        stmt.clearBindings();
 
        String card_id = entity.getCard_id();
        if (card_id != null) {
            stmt.bindString(1, card_id);
        }
 
        String local_id = entity.getLocal_id();
        if (local_id != null) {
            stmt.bindString(2, local_id);
        }
 
        String card_type = entity.getCard_type();
        if (card_type != null) {
            stmt.bindString(3, card_type);
        }
 
        String default_detail = entity.getDefault_detail();
        if (default_detail != null) {
            stmt.bindString(4, default_detail);
        }
 
        String deal_detail = entity.getDeal_detail();
        if (deal_detail != null) {
            stmt.bindString(5, deal_detail);
        }
 
        String gift = entity.getGift();
        if (gift != null) {
            stmt.bindString(6, gift);
        }
        stmt.bindLong(7, entity.getLeast_cost());
        stmt.bindLong(8, entity.getReduce_cost());
        stmt.bindLong(9, entity.getDiscount());
 
        String supply_bonus = entity.getSupply_bonus();
        if (supply_bonus != null) {
            stmt.bindString(10, supply_bonus);
        }
 
        String supply_balance = entity.getSupply_balance();
        if (supply_balance != null) {
            stmt.bindString(11, supply_balance);
        }
 
        String bonus_cleared = entity.getBonus_cleared();
        if (bonus_cleared != null) {
            stmt.bindString(12, bonus_cleared);
        }
 
        String bonus_rules = entity.getBonus_rules();
        if (bonus_rules != null) {
            stmt.bindString(13, bonus_rules);
        }
 
        String balance_rules = entity.getBalance_rules();
        if (balance_rules != null) {
            stmt.bindString(14, balance_rules);
        }
 
        String prerogative = entity.getPrerogative();
        if (prerogative != null) {
            stmt.bindString(15, prerogative);
        }
 
        String bind_old_card_url = entity.getBind_old_card_url();
        if (bind_old_card_url != null) {
            stmt.bindString(16, bind_old_card_url);
        }
 
        String activate_url = entity.getActivate_url();
        if (activate_url != null) {
            stmt.bindString(17, activate_url);
        }
 
        String ticket_class = entity.getTicket_class();
        if (ticket_class != null) {
            stmt.bindString(18, ticket_class);
        }
 
        String guide_url = entity.getGuide_url();
        if (guide_url != null) {
            stmt.bindString(19, guide_url);
        }
 
        String detail = entity.getDetail();
        if (detail != null) {
            stmt.bindString(20, detail);
        }
 
        String from = entity.getFrom();
        if (from != null) {
            stmt.bindString(21, from);
        }
 
        String to = entity.getTo();
        if (to != null) {
            stmt.bindString(22, to);
        }
 
        String flight = entity.getFlight();
        if (flight != null) {
            stmt.bindString(23, flight);
        }
 
        String departure_time = entity.getDeparture_time();
        if (departure_time != null) {
            stmt.bindString(24, departure_time);
        }
 
        String landing_time = entity.getLanding_time();
        if (landing_time != null) {
            stmt.bindString(25, landing_time);
        }
 
        String check_in_url = entity.getCheck_in_url();
        if (check_in_url != null) {
            stmt.bindString(26, check_in_url);
        }
 
        String air_model = entity.getAir_model();
        if (air_model != null) {
            stmt.bindString(27, air_model);
        }
 
        String logo_url = entity.getLogo_url();
        if (logo_url != null) {
            stmt.bindString(28, logo_url);
        }
 
        String code_type = entity.getCode_type();
        if (code_type != null) {
            stmt.bindString(29, code_type);
        }
 
        String branch_name = entity.getBranch_name();
        if (branch_name != null) {
            stmt.bindString(30, branch_name);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(31, title);
        }
 
        String color = entity.getColor();
        if (color != null) {
            stmt.bindString(32, color);
        }
 
        String notice = entity.getNotice();
        if (notice != null) {
            stmt.bindString(33, notice);
        }
 
        String service_phone = entity.getService_phone();
        if (service_phone != null) {
            stmt.bindString(34, service_phone);
        }
 
        String description = entity.getDescription();
        if (description != null) {
            stmt.bindString(35, description);
        }
        stmt.bindLong(36, entity.getUse_limit());
        stmt.bindLong(37, entity.getGet_limit());
        stmt.bindLong(38, entity.getUse_custom_code() ? 1L: 0L);
        stmt.bindLong(39, entity.getBind_openid() ? 1L: 0L);
        stmt.bindLong(40, entity.getCan_give_friend() ? 1L: 0L);
        stmt.bindLong(41, entity.getCan_share() ? 1L: 0L);
 
        String location_id_list = entity.getLocation_id_list();
        if (location_id_list != null) {
            stmt.bindString(42, location_id_list);
        }
 
        String date_info = entity.getDate_info();
        if (date_info != null) {
            stmt.bindString(43, date_info);
        }
        stmt.bindLong(44, entity.getType());
        stmt.bindLong(45, entity.getBegin_timestamp());
        stmt.bindLong(46, entity.getEnd_timestamp());
 
        String fixed_term = entity.getFixed_term();
        if (fixed_term != null) {
            stmt.bindString(47, fixed_term);
        }
 
        String fixed_begin_term = entity.getFixed_begin_term();
        if (fixed_begin_term != null) {
            stmt.bindString(48, fixed_begin_term);
        }
 
        String sku = entity.getSku();
        if (sku != null) {
            stmt.bindString(49, sku);
        }
        stmt.bindLong(50, entity.getQuantity());
 
        String url_name_type = entity.getUrl_name_type();
        if (url_name_type != null) {
            stmt.bindString(51, url_name_type);
        }
 
        String custom_url = entity.getCustom_url();
        if (custom_url != null) {
            stmt.bindString(52, custom_url);
        }
 
        String source = entity.getSource();
        if (source != null) {
            stmt.bindString(53, source);
        }
        stmt.bindLong(54, entity.getStatus());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, GetCardData entity) {
        stmt.clearBindings();
 
        String card_id = entity.getCard_id();
        if (card_id != null) {
            stmt.bindString(1, card_id);
        }
 
        String local_id = entity.getLocal_id();
        if (local_id != null) {
            stmt.bindString(2, local_id);
        }
 
        String card_type = entity.getCard_type();
        if (card_type != null) {
            stmt.bindString(3, card_type);
        }
 
        String default_detail = entity.getDefault_detail();
        if (default_detail != null) {
            stmt.bindString(4, default_detail);
        }
 
        String deal_detail = entity.getDeal_detail();
        if (deal_detail != null) {
            stmt.bindString(5, deal_detail);
        }
 
        String gift = entity.getGift();
        if (gift != null) {
            stmt.bindString(6, gift);
        }
        stmt.bindLong(7, entity.getLeast_cost());
        stmt.bindLong(8, entity.getReduce_cost());
        stmt.bindLong(9, entity.getDiscount());
 
        String supply_bonus = entity.getSupply_bonus();
        if (supply_bonus != null) {
            stmt.bindString(10, supply_bonus);
        }
 
        String supply_balance = entity.getSupply_balance();
        if (supply_balance != null) {
            stmt.bindString(11, supply_balance);
        }
 
        String bonus_cleared = entity.getBonus_cleared();
        if (bonus_cleared != null) {
            stmt.bindString(12, bonus_cleared);
        }
 
        String bonus_rules = entity.getBonus_rules();
        if (bonus_rules != null) {
            stmt.bindString(13, bonus_rules);
        }
 
        String balance_rules = entity.getBalance_rules();
        if (balance_rules != null) {
            stmt.bindString(14, balance_rules);
        }
 
        String prerogative = entity.getPrerogative();
        if (prerogative != null) {
            stmt.bindString(15, prerogative);
        }
 
        String bind_old_card_url = entity.getBind_old_card_url();
        if (bind_old_card_url != null) {
            stmt.bindString(16, bind_old_card_url);
        }
 
        String activate_url = entity.getActivate_url();
        if (activate_url != null) {
            stmt.bindString(17, activate_url);
        }
 
        String ticket_class = entity.getTicket_class();
        if (ticket_class != null) {
            stmt.bindString(18, ticket_class);
        }
 
        String guide_url = entity.getGuide_url();
        if (guide_url != null) {
            stmt.bindString(19, guide_url);
        }
 
        String detail = entity.getDetail();
        if (detail != null) {
            stmt.bindString(20, detail);
        }
 
        String from = entity.getFrom();
        if (from != null) {
            stmt.bindString(21, from);
        }
 
        String to = entity.getTo();
        if (to != null) {
            stmt.bindString(22, to);
        }
 
        String flight = entity.getFlight();
        if (flight != null) {
            stmt.bindString(23, flight);
        }
 
        String departure_time = entity.getDeparture_time();
        if (departure_time != null) {
            stmt.bindString(24, departure_time);
        }
 
        String landing_time = entity.getLanding_time();
        if (landing_time != null) {
            stmt.bindString(25, landing_time);
        }
 
        String check_in_url = entity.getCheck_in_url();
        if (check_in_url != null) {
            stmt.bindString(26, check_in_url);
        }
 
        String air_model = entity.getAir_model();
        if (air_model != null) {
            stmt.bindString(27, air_model);
        }
 
        String logo_url = entity.getLogo_url();
        if (logo_url != null) {
            stmt.bindString(28, logo_url);
        }
 
        String code_type = entity.getCode_type();
        if (code_type != null) {
            stmt.bindString(29, code_type);
        }
 
        String branch_name = entity.getBranch_name();
        if (branch_name != null) {
            stmt.bindString(30, branch_name);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(31, title);
        }
 
        String color = entity.getColor();
        if (color != null) {
            stmt.bindString(32, color);
        }
 
        String notice = entity.getNotice();
        if (notice != null) {
            stmt.bindString(33, notice);
        }
 
        String service_phone = entity.getService_phone();
        if (service_phone != null) {
            stmt.bindString(34, service_phone);
        }
 
        String description = entity.getDescription();
        if (description != null) {
            stmt.bindString(35, description);
        }
        stmt.bindLong(36, entity.getUse_limit());
        stmt.bindLong(37, entity.getGet_limit());
        stmt.bindLong(38, entity.getUse_custom_code() ? 1L: 0L);
        stmt.bindLong(39, entity.getBind_openid() ? 1L: 0L);
        stmt.bindLong(40, entity.getCan_give_friend() ? 1L: 0L);
        stmt.bindLong(41, entity.getCan_share() ? 1L: 0L);
 
        String location_id_list = entity.getLocation_id_list();
        if (location_id_list != null) {
            stmt.bindString(42, location_id_list);
        }
 
        String date_info = entity.getDate_info();
        if (date_info != null) {
            stmt.bindString(43, date_info);
        }
        stmt.bindLong(44, entity.getType());
        stmt.bindLong(45, entity.getBegin_timestamp());
        stmt.bindLong(46, entity.getEnd_timestamp());
 
        String fixed_term = entity.getFixed_term();
        if (fixed_term != null) {
            stmt.bindString(47, fixed_term);
        }
 
        String fixed_begin_term = entity.getFixed_begin_term();
        if (fixed_begin_term != null) {
            stmt.bindString(48, fixed_begin_term);
        }
 
        String sku = entity.getSku();
        if (sku != null) {
            stmt.bindString(49, sku);
        }
        stmt.bindLong(50, entity.getQuantity());
 
        String url_name_type = entity.getUrl_name_type();
        if (url_name_type != null) {
            stmt.bindString(51, url_name_type);
        }
 
        String custom_url = entity.getCustom_url();
        if (custom_url != null) {
            stmt.bindString(52, custom_url);
        }
 
        String source = entity.getSource();
        if (source != null) {
            stmt.bindString(53, source);
        }
        stmt.bindLong(54, entity.getStatus());
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public GetCardData readEntity(Cursor cursor, int offset) {
        GetCardData entity = new GetCardData( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // card_id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // local_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // card_type
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // default_detail
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // deal_detail
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // gift
            cursor.getLong(offset + 6), // least_cost
            cursor.getLong(offset + 7), // reduce_cost
            cursor.getInt(offset + 8), // discount
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // supply_bonus
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // supply_balance
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // bonus_cleared
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // bonus_rules
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // balance_rules
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // prerogative
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // bind_old_card_url
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // activate_url
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // ticket_class
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // guide_url
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // detail
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // from
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // to
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // flight
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // departure_time
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // landing_time
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // check_in_url
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // air_model
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // logo_url
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // code_type
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // branch_name
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // title
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // color
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // notice
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // service_phone
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // description
            cursor.getInt(offset + 35), // use_limit
            cursor.getInt(offset + 36), // get_limit
            cursor.getShort(offset + 37) != 0, // use_custom_code
            cursor.getShort(offset + 38) != 0, // bind_openid
            cursor.getShort(offset + 39) != 0, // can_give_friend
            cursor.getShort(offset + 40) != 0, // can_share
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // location_id_list
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // date_info
            cursor.getInt(offset + 43), // type
            cursor.getLong(offset + 44), // begin_timestamp
            cursor.getLong(offset + 45), // end_timestamp
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // fixed_term
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // fixed_begin_term
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // sku
            cursor.getInt(offset + 49), // quantity
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // url_name_type
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // custom_url
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // source
            cursor.getInt(offset + 53) // status
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, GetCardData entity, int offset) {
        entity.setCard_id(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setLocal_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCard_type(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDefault_detail(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDeal_detail(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGift(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setLeast_cost(cursor.getLong(offset + 6));
        entity.setReduce_cost(cursor.getLong(offset + 7));
        entity.setDiscount(cursor.getInt(offset + 8));
        entity.setSupply_bonus(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setSupply_balance(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setBonus_cleared(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setBonus_rules(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setBalance_rules(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPrerogative(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setBind_old_card_url(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setActivate_url(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setTicket_class(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setGuide_url(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setDetail(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setFrom(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setTo(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setFlight(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setDeparture_time(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setLanding_time(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setCheck_in_url(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setAir_model(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setLogo_url(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setCode_type(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setBranch_name(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setTitle(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setColor(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setNotice(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setService_phone(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setDescription(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setUse_limit(cursor.getInt(offset + 35));
        entity.setGet_limit(cursor.getInt(offset + 36));
        entity.setUse_custom_code(cursor.getShort(offset + 37) != 0);
        entity.setBind_openid(cursor.getShort(offset + 38) != 0);
        entity.setCan_give_friend(cursor.getShort(offset + 39) != 0);
        entity.setCan_share(cursor.getShort(offset + 40) != 0);
        entity.setLocation_id_list(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setDate_info(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setType(cursor.getInt(offset + 43));
        entity.setBegin_timestamp(cursor.getLong(offset + 44));
        entity.setEnd_timestamp(cursor.getLong(offset + 45));
        entity.setFixed_term(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setFixed_begin_term(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setSku(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setQuantity(cursor.getInt(offset + 49));
        entity.setUrl_name_type(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setCustom_url(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setSource(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setStatus(cursor.getInt(offset + 53));
     }
    
    @Override
    protected final String updateKeyAfterInsert(GetCardData entity, long rowId) {
        return entity.getCard_id();
    }
    
    @Override
    public String getKey(GetCardData entity) {
        if(entity != null) {
            return entity.getCard_id();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(GetCardData entity) {
        return entity.getCard_id() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
